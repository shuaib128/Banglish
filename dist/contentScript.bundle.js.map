{"version":3,"file":"contentScript.bundle.js","mappingsaAAa;AACb;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;ACxsDO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,UAAU;AACtC;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;AClC8B;AAC9B;AACA;AACA;AACA,gBAAgB,uCAAI;AACpB;AACA;AACA;AACA;AACA,sBAAsB,oBAAoB;AAC1C;AACA;AACA;AACA;AACA;AACA,sBAAsB,+BAA+B;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,0BAA0B;AACtD;AACA;AACA;AACA;AACA,8BAA8B,yBAAyB;AACvoBAAoB,kBAAkB;AACtC;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACoB;;;;;;;UCxKpB;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;;ACN+C;AACc;AAC7D;AACA,qBAAqB,wDAAQ,G","sources":["webpack://banglish/./Phonetic/data.js","webpack://banglish/./Phonetic/phonetc-preview.js","webpack://banglish/./Phonetic/phonetic.js","webpack://banglish/webpack/bootstrap","webpack://banglish/webpack/runtime/define property getters","webpack://banglish/webpack/runtime/hasOwnProperty shorthand","webpack://banglish/webpack/runtime/make namespace object","webpack://banglish/./contentScript.js"],"sourcesContent":["export const data = {\r\n  patterns: [\r\n    {\r\n      find: \"bhl\",\r\n      replace: \"ভ্ল\",\r\n    },\r\n    {\r\n      find: \"psh\",\r\n      replace: \"পশ\",\r\n    },\r\n    {\r\n      find: \"bdh\",\r\n      replace: \"ব্ধ\",\r\n    },\r\n    {\r\n      find: \"bj\",\r\n      replace: \"ব্জ\",\r\n    },\r\n    {\r\n      find: \"bd\",\r\n      replace: \"ব্দ\",\r\n    },\r\n    {\r\n      find: \"bb\",\r\n      replace: \"ব্ব\",\r\n    },\r\n    {\r\n      find: \"bl\",\r\n      replace: \"ব্ল\",\r\n    },\r\n    {\r\n      find: \"bh\",\r\n      replace: \"ভ\",\r\n    },\r\n    {\r\n      find: \"vl\",\r\n      replace: \"ভ্ল\",\r\n    },\r\n    {\r\n      find: \"b\",\r\n      replace: \"ব\",\r\n    },\r\n    {\r\n      find: \"v\",\r\n      replace: \"ভ\",\r\n    },\r\n    {\r\n      find: \"cNG\",\r\n      replace: \"চ্ঞ\",\r\n    },\r\n    {\r\n      find: \"cch\",\r\n      replace: \"চ্ছ\",\r\n    },\r\n    {\r\n      find: \"cc\",\r\n      replace: \"চ্চ\",\r\n    },\r\n    {\r\n      find: \"ch\",\r\n      replace: \"ছ\",\r\n    },\r\n    {\r\n      find: \"c\",\r\n      replace: \"চ\",\r\n    },\r\n    {\r\n      find: \"dhn\",\r\n      replace: \"ধ্ন\",\r\n    },\r\n    {\r\n      find: \"dhm\",\r\n      replace: \"ধ্ম\",\r\n    },\r\n    {\r\n      find: \"dgh\",\r\n      replace: \"দ্ঘ\",\r\n    },\r\n    {\r\n      find: \"ddh\",\r\n      replace: \"দ্ধ\",\r\n    },\r\n    {\r\n      find: \"dbh\",\r\n      replace: \"দ্ভ\",\r\n    },\r\n    {\r\n      find: \"dv\",\r\n      replace: \"দ্ভ\",\r\n    },\r\n    {\r\n      find: \"dm\",\r\n      replace: \"দ্ম\",\r\n    },\r\n    {\r\n      find: \"DD\",\r\n      replace: \"ড্ড\",\r\n    },\r\n    {\r\n      find: \"Dh\",\r\n      replace: \"ঢ\",\r\n    },\r\n    {\r\n      find: \"dh\",\r\n      replace: \"ধ\",\r\n    },\r\n    {\r\n      find: \"dg\",\r\n      replace: \"দ্গ\",\r\n    },\r\n    {\r\n      find: \"dd\",\r\n      replace: \"দ্দ\",\r\n    },\r\n    {\r\n      find: \"D\",\r\n      replace: \"ড\",\r\n    },\r\n    {\r\n      find: \"d\",\r\n      replace: \"দ\",\r\n    },\r\n    {\r\n      find: \"...\",\r\n      replace: \"...\",\r\n    },\r\n    {\r\n      find: \".`\",\r\n      replace: \".\",\r\n    },\r\n    {\r\n      find: \"..\",\r\n      replace: \"।।\",\r\n    },\r\n    {\r\n      find: \".\",\r\n      replace: \"।\",\r\n    },\r\n    {\r\n      find: \"ghn\",\r\n      replace: \"ঘ্ন\",\r\n    },\r\n    {\r\n      find: \"Ghn\",\r\n      replace: \"ঘ্ন\",\r\n    },\r\n    {\r\n      find: \"gdh\",\r\n      replace: \"গ্ধ\",\r\n    },\r\n    {\r\n      find: \"Gdh\",\r\n      replace: \"গ্ধ\",\r\n    },\r\n    {\r\n      find: \"gN\",\r\n      replace: \"গ্ণ\",\r\n    },\r\n    {\r\n      find: \"GN\",\r\n      replace: \"গ্ণ\",\r\n    },\r\n    {\r\n      find: \"gn\",\r\n      replace: \"গ্ন\",\r\n    },\r\n    {\r\n      find: \"Gn\",\r\n      replace: \"গ্ন\",\r\n    },\r\n    {\r\n      find: \"gm\",\r\n      replace: \"গ্ম\",\r\n    },\r\n    {\r\n      find: \"Gm\",\r\n      replace: \"গ্ম\",\r\n    },\r\n    {\r\n      find: \"gl\",\r\n      replace: \"গ্ল\",\r\n    },\r\n    {\r\n      find: \"Gl\",\r\n      replace: \"গ্ল\",\r\n    },\r\n    {\r\n      find: \"gg\",\r\n      replace: \"জ্ঞ\",\r\n    },\r\n    {\r\n      find: \"GG\",\r\n      replace: \"জ্ঞ\",\r\n    },\r\n    {\r\n      find: \"Gg\",\r\n      replace: \"জ্ঞ\",\r\n    },\r\n    {\r\n      find: \"gG\",\r\n      replace: \"জ্ঞ\",\r\n    },\r\n    {\r\n      find: \"gh\",\r\n      replace: \"ঘ\",\r\n    },\r\n    {\r\n      find: \"Gh\",\r\n      replace: \"ঘ\",\r\n    },\r\n    {\r\n      find: \"g\",\r\n      replace: \"গ\",\r\n    },\r\n    {\r\n      find: \"G\",\r\n      replace: \"গ\",\r\n    },\r\n    {\r\n      find: \"hN\",\r\n      replace: \"হ্ণ\",\r\n    },\r\n    {\r\n      find: \"hn\",\r\n      replace: \"হ্ন\",\r\n    },\r\n    {\r\n      find: \"hm\",\r\n      replace: \"হ্ম\",\r\n    },\r\n    {\r\n      find: \"hl\",\r\n      replace: \"হ্ল\",\r\n    },\r\n    {\r\n      find: \"h\",\r\n      replace: \"হ\",\r\n    },\r\n    {\r\n      find: \"jjh\",\r\n      replace: \"জ্ঝ\",\r\n    },\r\n    {\r\n      find: \"jNG\",\r\n      replace: \"জ্ঞ\",\r\n    },\r\n    {\r\n      find: \"jh\",\r\n      replace: \"ঝ\",\r\n    },\r\n    {\r\n      find: \"jj\",\r\n      replace: \"জ্জ\",\r\n    },\r\n    {\r\n      find: \"j\",\r\n      replace: \"জ\",\r\n    },\r\n    {\r\n      find: \"J\",\r\n      replace: \"জ\",\r\n    },\r\n    {\r\n      find: \"kkhN\",\r\n      replace: \"ক্ষ্ণ\",\r\n    },\r\n    {\r\n      find: \"kShN\",\r\n      replace: \"ক্ষ্ণ\",\r\n    },\r\n    {\r\n      find: \"kkhm\",\r\n      replace: \"ক্ষ্ম\",\r\n    },\r\n    {\r\n      find: \"kShm\",\r\n      replace: \"ক্ষ্ম\",\r\n    },\r\n    {\r\n      find: \"kxN\",\r\n      replace: \"ক্ষ্ণ\",\r\n    },\r\n    {\r\n      find: \"kxm\",\r\n      replace: \"ক্ষ্ম\",\r\n    },\r\n    {\r\n      find: \"kkh\",\r\n      replace: \"ক্ষ\",\r\n    },\r\n    {\r\n      find: \"kSh\",\r\n      replace: \"ক্ষ\",\r\n    },\r\n    {\r\n      find: \"ksh\",\r\n      replace: \"কশ\",\r\n    },\r\n    {\r\n      find: \"kx\",\r\n      replace: \"ক্ষ\",\r\n    },\r\n    {\r\n      find: \"kk\",\r\n      replace: \"ক্ক\",\r\n    },\r\n    {\r\n      find: \"kT\",\r\n      replace: \"ক্ট\",\r\n    },\r\n    {\r\n      find: \"kt\",\r\n      replace: \"ক্ত\",\r\n    },\r\n    {\r\n      find: \"kl\",\r\n      replace: \"ক্ল\",\r\n    },\r\n    {\r\n      find: \"ks\",\r\n      replace: \"ক্স\",\r\n    },\r\n    {\r\n      find: \"kh\",\r\n      replace: \"খ\",\r\n    },\r\n    {\r\n      find: \"k\",\r\n      replace: \"ক\",\r\n    },\r\n    {\r\n      find: \"lbh\",\r\n      replace: \"ল্ভ\",\r\n    },\r\n    {\r\n      find: \"ldh\",\r\n      replace: \"ল্ধ\",\r\n    },\r\n    {\r\n      find: \"lkh\",\r\n      replace: \"লখ\",\r\n    },\r\n    {\r\n      find: \"lgh\",\r\n      replace: \"লঘ\",\r\n    },\r\n    {\r\n      find: \"lph\",\r\n      replace: \"লফ\",\r\n    },\r\n    {\r\n      find: \"lk\",\r\n      replace: \"ল্ক\",\r\n    },\r\n    {\r\n      find: \"lg\",\r\n      replace: \"ল্গ\",\r\n    },\r\n    {\r\n      find: \"lT\",\r\n      replace: \"ল্ট\",\r\n    },\r\n    {\r\n      find: \"lD\",\r\n      replace: \"ল্ড\",\r\n    },\r\n    {\r\n      find: \"lp\",\r\n      replace: \"ল্প\",\r\n    },\r\n    {\r\n      find: \"lv\",\r\n      replace: \"ল্ভ\",\r\n    },\r\n    {\r\n      find: \"lm\",\r\n      replace: \"ল্ম\",\r\n    },\r\n    {\r\n      find: \"ll\",\r\n      replace: \"ল্ল\",\r\n    },\r\n    {\r\n      find: \"lb\",\r\n      replace: \"ল্ব\",\r\n    },\r\n    {\r\n      find: \"l\",\r\n      replace: \"ল\",\r\n    },\r\n    {\r\n      find: \"mth\",\r\n      replace: \"ম্থ\",\r\n    },\r\n    {\r\n      find: \"mph\",\r\n      replace: \"ম্ফ\",\r\n    },\r\n    {\r\n      find: \"mbh\",\r\n      replace: \"ম্ভ\",\r\n    },\r\n    {\r\n      find: \"mpl\",\r\n      replace: \"মপ্ল\",\r\n    },\r\n    {\r\n      find: \"mn\",\r\n      replace: \"ম্ন\",\r\n    },\r\n    {\r\n      find: \"mp\",\r\n      replace: \"ম্প\",\r\n    },\r\n    {\r\n      find: \"mv\",\r\n      replace: \"ম্ভ\",\r\n    },\r\n    {\r\n      find: \"mm\",\r\n      replace: \"ম্ম\",\r\n    },\r\n    {\r\n      find: \"ml\",\r\n      replace: \"ম্ল\",\r\n    },\r\n    {\r\n      find: \"mb\",\r\n      replace: \"ম্ব\",\r\n    },\r\n    {\r\n      find: \"mf\",\r\n      replace: \"ম্ফ\",\r\n    },\r\n    {\r\n      find: \"m\",\r\n      replace: \"ম\",\r\n    },\r\n    {\r\n      find: \"0\",\r\n      replace: \"০\",\r\n    },\r\n    {\r\n      find: \"1\",\r\n      replace: \"১\",\r\n    },\r\n    {\r\n      find: \"2\",\r\n      replace: \"২\",\r\n    },\r\n    {\r\n      find: \"3\",\r\n      replace: \"৩\",\r\n    },\r\n    {\r\n      find: \"4\",\r\n      replace: \"৪\",\r\n    },\r\n    {\r\n      find: \"5\",\r\n      replace: \"৫\",\r\n    },\r\n    {\r\n      find: \"6\",\r\n      replace: \"৬\",\r\n    },\r\n    {\r\n      find: \"7\",\r\n      replace: \"৭\",\r\n    },\r\n    {\r\n      find: \"8\",\r\n      replace: \"৮\",\r\n    },\r\n    {\r\n      find: \"9\",\r\n      replace: \"৯\",\r\n    },\r\n    {\r\n      find: \"NgkSh\",\r\n      replace: \"ঙ্ক্ষ\",\r\n    },\r\n    {\r\n      find: \"Ngkkh\",\r\n      replace: \"ঙ্ক্ষ\",\r\n    },\r\n    {\r\n      find: \"NGch\",\r\n      replace: \"ঞ্ছ\",\r\n    },\r\n    {\r\n      find: \"Nggh\",\r\n      replace: \"ঙ্ঘ\",\r\n    },\r\n    {\r\n      find: \"Ngkh\",\r\n      replace: \"ঙ্খ\",\r\n    },\r\n    {\r\n      find: \"NGjh\",\r\n      replace: \"ঞ্ঝ\",\r\n    },\r\n    {\r\n      find: \"ngOU\",\r\n      replace: \"ঙ্গৌ\",\r\n    },\r\n    {\r\n      find: \"ngOI\",\r\n      replace: \"ঙ্গৈ\",\r\n    },\r\n    {\r\n      find: \"Ngkx\",\r\n      replace: \"ঙ্ক্ষ\",\r\n    },\r\n    {\r\n      find: \"NGc\",\r\n      replace: \"ঞ্চ\",\r\n    },\r\n    {\r\n      find: \"nch\",\r\n      replace: \"ঞ্ছ\",\r\n    },\r\n    {\r\n      find: \"njh\",\r\n      replace: \"ঞ্ঝ\",\r\n    },\r\n    {\r\n      find: \"ngh\",\r\n      replace: \"ঙ্ঘ\",\r\n    },\r\n    {\r\n      find: \"Ngk\",\r\n      replace: \"ঙ্ক\",\r\n    },\r\n    {\r\n      find: \"Ngx\",\r\n      replace: \"ঙ্ষ\",\r\n    },\r\n    {\r\n      find: \"Ngg\",\r\n      replace: \"ঙ্গ\",\r\n    },\r\n    {\r\n      find: \"Ngm\",\r\n      replace: \"ঙ্ম\",\r\n    },\r\n    {\r\n      find: \"NGj\",\r\n      replace: \"ঞ্জ\",\r\n    },\r\n    {\r\n      find: \"ndh\",\r\n      replace: \"ন্ধ\",\r\n    },\r\n    {\r\n      find: \"nTh\",\r\n      replace: \"ন্ঠ\",\r\n    },\r\n    {\r\n      find: \"NTh\",\r\n      replace: \"ণ্ঠ\",\r\n    },\r\n    {\r\n      find: \"nth\",\r\n      replace: \"ন্থ\",\r\n    },\r\n    {\r\n      find: \"nkh\",\r\n      replace: \"ঙ্খ\",\r\n    },\r\n    {\r\n      find: \"ngo\",\r\n      replace: \"ঙ্গ\",\r\n    },\r\n    {\r\n      find: \"nga\",\r\n      replace: \"ঙ্গা\",\r\n    },\r\n    {\r\n      find: \"ngi\",\r\n      replace: \"ঙ্গি\",\r\n    },\r\n    {\r\n      find: \"ngI\",\r\n      replace: \"ঙ্গী\",\r\n    },\r\n    {\r\n      find: \"ngu\",\r\n      replace: \"ঙ্গু\",\r\n    },\r\n    {\r\n      find: \"ngU\",\r\n      replace: \"ঙ্গূ\",\r\n    },\r\n    {\r\n      find: \"nge\",\r\n      replace: \"ঙ্গে\",\r\n    },\r\n    {\r\n      find: \"ngO\",\r\n      replace: \"ঙ্গো\",\r\n    },\r\n    {\r\n      find: \"NDh\",\r\n      replace: \"ণ্ঢ\",\r\n    },\r\n    {\r\n      find: \"nsh\",\r\n      replace: \"নশ\",\r\n    },\r\n    {\r\n      find: \"Ngr\",\r\n      replace: \"ঙর\",\r\n    },\r\n    {\r\n      find: \"NGr\",\r\n      replace: \"ঞর\",\r\n    },\r\n    {\r\n      find: \"ngr\",\r\n      replace: \"ংর\",\r\n    },\r\n    {\r\n      find: \"nj\",\r\n      replace: \"ঞ্জ\",\r\n    },\r\n    {\r\n      find: \"Ng\",\r\n      replace: \"ঙ\",\r\n    },\r\n    {\r\n      find: \"NG\",\r\n      replace: \"ঞ\",\r\n    },\r\n    {\r\n      find: \"nk\",\r\n      replace: \"ঙ্ক\",\r\n    },\r\n    {\r\n      find: \"ng\",\r\n      replace: \"ং\",\r\n    },\r\n    {\r\n      find: \"nn\",\r\n      replace: \"ন্ন\",\r\n    },\r\n    {\r\n      find: \"NN\",\r\n      replace: \"ণ্ণ\",\r\n    },\r\n    {\r\n      find: \"Nn\",\r\n      replace: \"ণ্ন\",\r\n    },\r\n    {\r\n      find: \"nm\",\r\n      replace: \"ন্ম\",\r\n    },\r\n    {\r\n      find: \"Nm\",\r\n      replace: \"ণ্ম\",\r\n    },\r\n    {\r\n      find: \"nd\",\r\n      replace: \"ন্দ\",\r\n    },\r\n    {\r\n      find: \"nT\",\r\n      replace: \"ন্ট\",\r\n    },\r\n    {\r\n      find: \"NT\",\r\n      replace: \"ণ্ট\",\r\n    },\r\n    {\r\n      find: \"nD\",\r\n      replace: \"ন্ড\",\r\n    },\r\n    {\r\n      find: \"ND\",\r\n      replace: \"ণ্ড\",\r\n    },\r\n    {\r\n      find: \"nt\",\r\n      replace: \"ন্ত\",\r\n    },\r\n    {\r\n      find: \"ns\",\r\n      replace: \"ন্স\",\r\n    },\r\n    {\r\n      find: \"nc\",\r\n      replace: \"ঞ্চ\",\r\n    },\r\n    {\r\n      find: \"n\",\r\n      replace: \"ন\",\r\n    },\r\n    {\r\n      find: \"N\",\r\n      replace: \"ণ\",\r\n    },\r\n    {\r\n      find: \"OI`\",\r\n      replace: \"ৈ\",\r\n    },\r\n    {\r\n      find: \"OU`\",\r\n      replace: \"ৌ\",\r\n    },\r\n    {\r\n      find: \"O`\",\r\n      replace: \"ো\",\r\n    },\r\n    {\r\n      find: \"OI\",\r\n      replace: \"ৈ\",\r\n      rules: [\r\n        {\r\n          matches: [\r\n            {\r\n              type: \"prefix\",\r\n              scope: \"!consonant\",\r\n            },\r\n          ],\r\n          replace: \"ঐ\",\r\n        },\r\n        {\r\n          matches: [\r\n            {\r\n              type: \"prefix\",\r\n              scope: \"punctuation\",\r\n            },\r\n          ],\r\n          replace: \"ঐ\",\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      find: \"OU\",\r\n      replace: \"ৌ\",\r\n      rules: [\r\n        {\r\n          matches: [\r\n            {\r\n              type: \"prefix\",\r\n              scope: \"!consonant\",\r\n            },\r\n          ],\r\n          replace: \"ঔ\",\r\n        },\r\n        {\r\n          matches: [\r\n            {\r\n              type: \"prefix\",\r\n              scope: \"punctuation\",\r\n            },\r\n          ],\r\n          replace: \"ঔ\",\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      find: \"O\",\r\n      replace: \"ো\",\r\n      rules: [\r\n        {\r\n          matches: [\r\n            {\r\n              type: \"prefix\",\r\n              scope: \"!consonant\",\r\n            },\r\n          ],\r\n          replace: \"ও\",\r\n        },\r\n        {\r\n          matches: [\r\n            {\r\n              type: \"prefix\",\r\n              scope: \"punctuation\",\r\n            },\r\n          ],\r\n          replace: \"ও\",\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      find: \"phl\",\r\n      replace: \"ফ্ল\",\r\n    },\r\n    {\r\n      find: \"pT\",\r\n      replace: \"প্ট\",\r\n    },\r\n    {\r\n      find: \"pt\",\r\n      replace: \"প্ত\",\r\n    },\r\n    {\r\n      find: \"pn\",\r\n      replace: \"প্ন\",\r\n    },\r\n    {\r\n      find: \"pp\",\r\n      replace: \"প্প\",\r\n    },\r\n    {\r\n      find: \"pl\",\r\n      replace: \"প্ল\",\r\n    },\r\n    {\r\n      find: \"ps\",\r\n      replace: \"প্স\",\r\n    },\r\n    {\r\n      find: \"ph\",\r\n      replace: \"ফ\",\r\n    },\r\n    {\r\n      find: \"fl\",\r\n      replace: \"ফ্ল\",\r\n    },\r\n    {\r\n      find: \"f\",\r\n      replace: \"ফ\",\r\n    },\r\n    {\r\n      find: \"p\",\r\n      replace: \"প\",\r\n    },\r\n    {\r\n      find: \"rri`\",\r\n      replace: \"ৃ\",\r\n    },\r\n    {\r\n      find: \"rri\",\r\n      replace: \"ৃ\",\r\n      rules: [\r\n        {\r\n          matches: [\r\n            {\r\n              type: \"prefix\",\r\n              scope: \"!consonant\",\r\n            },\r\n          ],\r\n          replace: \"ঋ\",\r\n        },\r\n        {\r\n          matches: [\r\n            {\r\n              type: \"prefix\",\r\n              scope: \"punctuation\",\r\n            },\r\n          ],\r\n          replace: \"ঋ\",\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      find: \"rrZ\",\r\n      replace: \"রর‍্য\",\r\n    },\r\n    {\r\n      find: \"rry\",\r\n      replace: \"রর‍্য\",\r\n    },\r\n    {\r\n      find: \"rZ\",\r\n      replace: \"র‍্য\",\r\n      rules: [\r\n        {\r\n          matches: [\r\n            {\r\n              type: \"prefix\",\r\n              scope: \"consonant\",\r\n            },\r\n            {\r\n              type: \"prefix\",\r\n              scope: \"!exact\",\r\n              value: \"r\",\r\n            },\r\n            {\r\n              type: \"prefix\",\r\n              scope: \"!exact\",\r\n              value: \"y\",\r\n            },\r\n            {\r\n              type: \"prefix\",\r\n              scope: \"!exact\",\r\n              value: \"w\",\r\n            },\r\n            {\r\n              type: \"prefix\",\r\n              scope: \"!exact\",\r\n              value: \"x\",\r\n            },\r\n          ],\r\n          replace: \"্র্য\",\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      find: \"ry\",\r\n      replace: \"র‍্য\",\r\n      rules: [\r\n        {\r\n          matches: [\r\n            {\r\n              type: \"prefix\",\r\n              scope: \"consonant\",\r\n            },\r\n            {\r\n              type: \"prefix\",\r\n              scope: \"!exact\",\r\n              value: \"r\",\r\n            },\r\n            {\r\n              type: \"prefix\",\r\n              scope: \"!exact\",\r\n              value: \"y\",\r\n            },\r\n            {\r\n              type: \"prefix\",\r\n              scope: \"!exact\",\r\n              value: \"w\",\r\n            },\r\n            {\r\n              type: \"prefix\",\r\n              scope: \"!exact\",\r\n              value: \"x\",\r\n            },\r\n          ],\r\n          replace: \"্র্য\",\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      find: \"rr\",\r\n      replace: \"রর\",\r\n      rules: [\r\n        {\r\n          matches: [\r\n            {\r\n              type: \"prefix\",\r\n              scope: \"!consonant\",\r\n            },\r\n            {\r\n              type: \"suffix\",\r\n              scope: \"!vowel\",\r\n            },\r\n            {\r\n              type: \"suffix\",\r\n              scope: \"!exact\",\r\n              value: \"r\",\r\n            },\r\n            {\r\n              type: \"suffix\",\r\n              scope: \"!punctuation\",\r\n            },\r\n          ],\r\n          replace: \"র্\",\r\n        },\r\n        {\r\n          matches: [\r\n            {\r\n              type: \"prefix\",\r\n              scope: \"consonant\",\r\n            },\r\n            {\r\n              type: \"prefix\",\r\n              scope: \"!exact\",\r\n              value: \"r\",\r\n            },\r\n          ],\r\n          replace: \"্রর\",\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      find: \"Rg\",\r\n      replace: \"ড়্গ\",\r\n    },\r\n    {\r\n      find: \"Rh\",\r\n      replace: \"ঢ়\",\r\n    },\r\n    {\r\n      find: \"R\",\r\n      replace: \"ড়\",\r\n    },\r\n    {\r\n      find: \"r\",\r\n      replace: \"র\",\r\n      rules: [\r\n        {\r\n          matches: [\r\n            {\r\n              type: \"prefix\",\r\n              scope: \"consonant\",\r\n            },\r\n            {\r\n              type: \"prefix\",\r\n              scope: \"!exact\",\r\n              value: \"r\",\r\n            },\r\n            {\r\n              type: \"prefix\",\r\n              scope: \"!exact\",\r\n              value: \"y\",\r\n            },\r\n            {\r\n              type: \"prefix\",\r\n              scope: \"!exact\",\r\n              value: \"w\",\r\n            },\r\n            {\r\n              type: \"prefix\",\r\n              scope: \"!exact\",\r\n              value: \"x\",\r\n            },\r\n            {\r\n              type: \"prefix\",\r\n              scope: \"!exact\",\r\n              value: \"Z\",\r\n            },\r\n          ],\r\n          replace: \"্র\",\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      find: \"shch\",\r\n      replace: \"শ্ছ\",\r\n    },\r\n    {\r\n      find: \"ShTh\",\r\n      replace: \"ষ্ঠ\",\r\n    },\r\n    {\r\n      find: \"Shph\",\r\n      replace: \"ষ্ফ\",\r\n    },\r\n    {\r\n      find: \"Sch\",\r\n      replace: \"শ্ছ\",\r\n    },\r\n    {\r\n      find: \"skl\",\r\n      replace: \"স্ক্ল\",\r\n    },\r\n    {\r\n      find: \"skh\",\r\n      replace: \"স্খ\",\r\n    },\r\n    {\r\n      find: \"sth\",\r\n      replace: \"স্থ\",\r\n    },\r\n    {\r\n      find: \"sph\",\r\n      replace: \"স্ফ\",\r\n    },\r\n    {\r\n      find: \"shc\",\r\n      replace: \"শ্চ\",\r\n    },\r\n    {\r\n      find: \"sht\",\r\n      replace: \"শ্ত\",\r\n    },\r\n    {\r\n      find: \"shn\",\r\n      replace: \"শ্ন\",\r\n    },\r\n    {\r\n      find: \"shm\",\r\n      replace: \"শ্ম\",\r\n    },\r\n    {\r\n      find: \"shl\",\r\n      replace: \"শ্ল\",\r\n    },\r\n    {\r\n      find: \"Shk\",\r\n      replace: \"ষ্ক\",\r\n    },\r\n    {\r\n      find: \"ShT\",\r\n      replace: \"ষ্ট\",\r\n    },\r\n    {\r\n      find: \"ShN\",\r\n      replace: \"ষ্ণ\",\r\n    },\r\n    {\r\n      find: \"Shp\",\r\n      replace: \"ষ্প\",\r\n    },\r\n    {\r\n      find: \"Shf\",\r\n      replace: \"ষ্ফ\",\r\n    },\r\n    {\r\n      find: \"Shm\",\r\n      replace: \"ষ্ম\",\r\n    },\r\n    {\r\n      find: \"spl\",\r\n      replace: \"স্প্ল\",\r\n    },\r\n    {\r\n      find: \"sk\",\r\n      replace: \"স্ক\",\r\n    },\r\n    {\r\n      find: \"Sc\",\r\n      replace: \"শ্চ\",\r\n    },\r\n    {\r\n      find: \"sT\",\r\n      replace: \"স্ট\",\r\n    },\r\n    {\r\n      find: \"st\",\r\n      replace: \"স্ত\",\r\n    },\r\n    {\r\n      find: \"sn\",\r\n      replace: \"স্ন\",\r\n    },\r\n    {\r\n      find: \"sp\",\r\n      replace: \"স্প\",\r\n    },\r\n    {\r\n      find: \"sf\",\r\n      replace: \"স্ফ\",\r\n    },\r\n    {\r\n      find: \"sm\",\r\n      replace: \"স্ম\",\r\n    },\r\n    {\r\n      find: \"sl\",\r\n      replace: \"স্ল\",\r\n    },\r\n    {\r\n      find: \"sh\",\r\n      replace: \"শ\",\r\n    },\r\n    {\r\n      find: \"Sc\",\r\n      replace: \"শ্চ\",\r\n    },\r\n    {\r\n      find: \"St\",\r\n      replace: \"শ্ত\",\r\n    },\r\n    {\r\n      find: \"Sn\",\r\n      replace: \"শ্ন\",\r\n    },\r\n    {\r\n      find: \"Sm\",\r\n      replace: \"শ্ম\",\r\n    },\r\n    {\r\n      find: \"Sl\",\r\n      replace: \"শ্ল\",\r\n    },\r\n    {\r\n      find: \"Sh\",\r\n      replace: \"ষ\",\r\n    },\r\n    {\r\n      find: \"s\",\r\n      replace: \"স\",\r\n    },\r\n    {\r\n      find: \"S\",\r\n      replace: \"শ\",\r\n    },\r\n    {\r\n      find: \"oo`\",\r\n      replace: \"ু\",\r\n    },\r\n    {\r\n      find: \"oo\",\r\n      replace: \"ু\",\r\n      rules: [\r\n        {\r\n          matches: [\r\n            {\r\n              type: \"prefix\",\r\n              scope: \"!consonant\",\r\n            },\r\n            {\r\n              type: \"suffix\",\r\n              scope: \"!exact\",\r\n              value: \"`\",\r\n            },\r\n          ],\r\n          replace: \"উ\",\r\n        },\r\n        {\r\n          matches: [\r\n            {\r\n              type: \"prefix\",\r\n              scope: \"punctuation\",\r\n            },\r\n            {\r\n              type: \"suffix\",\r\n              scope: \"!exact\",\r\n              value: \"`\",\r\n            },\r\n          ],\r\n          replace: \"উ\",\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      find: \"o`\",\r\n      replace: \"\",\r\n    },\r\n    {\r\n      find: \"oZ\",\r\n      replace: \"অ্য\",\r\n    },\r\n    {\r\n      find: \"o\",\r\n      replace: \"\",\r\n      rules: [\r\n        {\r\n          matches: [\r\n            {\r\n              type: \"prefix\",\r\n              scope: \"vowel\",\r\n            },\r\n            {\r\n              type: \"prefix\",\r\n              scope: \"!exact\",\r\n              value: \"o\",\r\n            },\r\n          ],\r\n          replace: \"ও\",\r\n        },\r\n        {\r\n          matches: [\r\n            {\r\n              type: \"prefix\",\r\n              scope: \"vowel\",\r\n            },\r\n            {\r\n              type: \"prefix\",\r\n              scope: \"exact\",\r\n              value: \"o\",\r\n            },\r\n          ],\r\n          replace: \"অ\",\r\n        },\r\n        {\r\n          matches: [\r\n            {\r\n              type: \"prefix\",\r\n              scope: \"punctuation\",\r\n            },\r\n          ],\r\n          replace: \"অ\",\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      find: \"tth\",\r\n      replace: \"ত্থ\",\r\n    },\r\n    {\r\n      find: \"t``\",\r\n      replace: \"ৎ\",\r\n    },\r\n    {\r\n      find: \"TT\",\r\n      replace: \"ট্ট\",\r\n    },\r\n    {\r\n      find: \"Tm\",\r\n      replace: \"ট্ম\",\r\n    },\r\n    {\r\n      find: \"Th\",\r\n      replace: \"ঠ\",\r\n    },\r\n    {\r\n      find: \"tn\",\r\n      replace: \"ত্ন\",\r\n    },\r\n    {\r\n      find: \"tm\",\r\n      replace: \"ত্ম\",\r\n    },\r\n    {\r\n      find: \"th\",\r\n      replace: \"থ\",\r\n    },\r\n    {\r\n      find: \"tt\",\r\n      replace: \"ত্ত\",\r\n    },\r\n    {\r\n      find: \"T\",\r\n      replace: \"ট\",\r\n    },\r\n    {\r\n      find: \"t\",\r\n      replace: \"ত\",\r\n    },\r\n    {\r\n      find: \"aZ\",\r\n      replace: \"অ্যা\",\r\n    },\r\n    {\r\n      find: \"AZ\",\r\n      replace: \"অ্যা\",\r\n    },\r\n    {\r\n      find: \"a`\",\r\n      replace: \"া\",\r\n    },\r\n    {\r\n      find: \"A`\",\r\n      replace: \"া\",\r\n    },\r\n    {\r\n      find: \"a\",\r\n      replace: \"া\",\r\n      rules: [\r\n        {\r\n          matches: [\r\n            {\r\n              type: \"prefix\",\r\n              scope: \"punctuation\",\r\n            },\r\n            {\r\n              type: \"suffix\",\r\n              scope: \"!exact\",\r\n              value: \"`\",\r\n            },\r\n          ],\r\n          replace: \"আ\",\r\n        },\r\n        {\r\n          matches: [\r\n            {\r\n              type: \"prefix\",\r\n              scope: \"!consonant\",\r\n            },\r\n            {\r\n              type: \"prefix\",\r\n              scope: \"!exact\",\r\n              value: \"a\",\r\n            },\r\n            {\r\n              type: \"suffix\",\r\n              scope: \"!exact\",\r\n              value: \"`\",\r\n            },\r\n          ],\r\n          replace: \"য়া\",\r\n        },\r\n        {\r\n          matches: [\r\n            {\r\n              type: \"prefix\",\r\n              scope: \"exact\",\r\n              value: \"a\",\r\n            },\r\n            {\r\n              type: \"suffix\",\r\n              scope: \"!exact\",\r\n              value: \"`\",\r\n            },\r\n          ],\r\n          replace: \"আ\",\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      find: \"i`\",\r\n      replace: \"ি\",\r\n    },\r\n    {\r\n      find: \"i\",\r\n      replace: \"ি\",\r\n      rules: [\r\n        {\r\n          matches: [\r\n            {\r\n              type: \"prefix\",\r\n              scope: \"!consonant\",\r\n            },\r\n            {\r\n              type: \"suffix\",\r\n              scope: \"!exact\",\r\n              value: \"`\",\r\n            },\r\n          ],\r\n          replace: \"ই\",\r\n        },\r\n        {\r\n          matches: [\r\n            {\r\n              type: \"prefix\",\r\n              scope: \"punctuation\",\r\n            },\r\n            {\r\n              type: \"suffix\",\r\n              scope: \"!exact\",\r\n              value: \"`\",\r\n            },\r\n          ],\r\n          replace: \"ই\",\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      find: \"I`\",\r\n      replace: \"ী\",\r\n    },\r\n    {\r\n      find: \"I\",\r\n      replace: \"ী\",\r\n      rules: [\r\n        {\r\n          matches: [\r\n            {\r\n              type: \"prefix\",\r\n              scope: \"!consonant\",\r\n            },\r\n            {\r\n              type: \"suffix\",\r\n              scope: \"!exact\",\r\n              value: \"`\",\r\n            },\r\n          ],\r\n          replace: \"ঈ\",\r\n        },\r\n        {\r\n          matches: [\r\n            {\r\n              type: \"prefix\",\r\n              scope: \"punctuation\",\r\n            },\r\n            {\r\n              type: \"suffix\",\r\n              scope: \"!exact\",\r\n              value: \"`\",\r\n            },\r\n          ],\r\n          replace: \"ঈ\",\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      find: \"u`\",\r\n      replace: \"ু\",\r\n    },\r\n    {\r\n      find: \"u\",\r\n      replace: \"ু\",\r\n      rules: [\r\n        {\r\n          matches: [\r\n            {\r\n              type: \"prefix\",\r\n              scope: \"!consonant\",\r\n            },\r\n            {\r\n              type: \"suffix\",\r\n              scope: \"!exact\",\r\n              value: \"`\",\r\n            },\r\n          ],\r\n          replace: \"উ\",\r\n        },\r\n        {\r\n          matches: [\r\n            {\r\n              type: \"prefix\",\r\n              scope: \"punctuation\",\r\n            },\r\n            {\r\n              type: \"suffix\",\r\n              scope: \"!exact\",\r\n              value: \"`\",\r\n            },\r\n          ],\r\n          replace: \"উ\",\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      find: \"U`\",\r\n      replace: \"ূ\",\r\n    },\r\n    {\r\n      find: \"U\",\r\n      replace: \"ূ\",\r\n      rules: [\r\n        {\r\n          matches: [\r\n            {\r\n              type: \"prefix\",\r\n              scope: \"!consonant\",\r\n            },\r\n            {\r\n              type: \"suffix\",\r\n              scope: \"!exact\",\r\n              value: \"`\",\r\n            },\r\n          ],\r\n          replace: \"ঊ\",\r\n        },\r\n        {\r\n          matches: [\r\n            {\r\n              type: \"prefix\",\r\n              scope: \"punctuation\",\r\n            },\r\n            {\r\n              type: \"suffix\",\r\n              scope: \"!exact\",\r\n              value: \"`\",\r\n            },\r\n          ],\r\n          replace: \"ঊ\",\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      find: \"ee`\",\r\n      replace: \"ী\",\r\n    },\r\n    {\r\n      find: \"ee\",\r\n      replace: \"ী\",\r\n      rules: [\r\n        {\r\n          matches: [\r\n            {\r\n              type: \"prefix\",\r\n              scope: \"!consonant\",\r\n            },\r\n            {\r\n              type: \"suffix\",\r\n              scope: \"!exact\",\r\n              value: \"`\",\r\n            },\r\n          ],\r\n          replace: \"ঈ\",\r\n        },\r\n        {\r\n          matches: [\r\n            {\r\n              type: \"prefix\",\r\n              scope: \"punctuation\",\r\n            },\r\n            {\r\n              type: \"suffix\",\r\n              scope: \"!exact\",\r\n              value: \"`\",\r\n            },\r\n          ],\r\n          replace: \"ঈ\",\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      find: \"e`\",\r\n      replace: \"ে\",\r\n    },\r\n    {\r\n      find: \"e\",\r\n      replace: \"ে\",\r\n      rules: [\r\n        {\r\n          matches: [\r\n            {\r\n              type: \"prefix\",\r\n              scope: \"!consonant\",\r\n            },\r\n            {\r\n              type: \"suffix\",\r\n              scope: \"!exact\",\r\n              value: \"`\",\r\n            },\r\n          ],\r\n          replace: \"এ\",\r\n        },\r\n        {\r\n          matches: [\r\n            {\r\n              type: \"prefix\",\r\n              scope: \"punctuation\",\r\n            },\r\n            {\r\n              type: \"suffix\",\r\n              scope: \"!exact\",\r\n              value: \"`\",\r\n            },\r\n          ],\r\n          replace: \"এ\",\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      find: \"z\",\r\n      replace: \"য\",\r\n    },\r\n    {\r\n      find: \"Z\",\r\n      replace: \"্য\",\r\n    },\r\n    {\r\n      find: \"y\",\r\n      replace: \"্য\",\r\n      rules: [\r\n        {\r\n          matches: [\r\n            {\r\n              type: \"prefix\",\r\n              scope: \"!consonant\",\r\n            },\r\n            {\r\n              type: \"prefix\",\r\n              scope: \"!punctuation\",\r\n            },\r\n          ],\r\n          replace: \"য়\",\r\n        },\r\n        {\r\n          matches: [\r\n            {\r\n              type: \"prefix\",\r\n              scope: \"punctuation\",\r\n            },\r\n          ],\r\n          replace: \"ইয়\",\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      find: \"Y\",\r\n      replace: \"য়\",\r\n    },\r\n    {\r\n      find: \"q\",\r\n      replace: \"ক\",\r\n    },\r\n    {\r\n      find: \"w\",\r\n      replace: \"ও\",\r\n      rules: [\r\n        {\r\n          matches: [\r\n            {\r\n              type: \"prefix\",\r\n              scope: \"punctuation\",\r\n            },\r\n            {\r\n              type: \"suffix\",\r\n              scope: \"vowel\",\r\n            },\r\n          ],\r\n          replace: \"ওয়\",\r\n        },\r\n        {\r\n          matches: [\r\n            {\r\n              type: \"prefix\",\r\n              scope: \"consonant\",\r\n            },\r\n          ],\r\n          replace: \"্ব\",\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      find: \"x\",\r\n      replace: \"ক্স\",\r\n      rules: [\r\n        {\r\n          matches: [\r\n            {\r\n              type: \"prefix\",\r\n              scope: \"punctuation\",\r\n            },\r\n          ],\r\n          replace: \"এক্স\",\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      find: \":`\",\r\n      replace: \":\",\r\n    },\r\n    {\r\n      find: \":\",\r\n      replace: \"ঃ\",\r\n    },\r\n    {\r\n      find: \"^`\",\r\n      replace: \"^\",\r\n    },\r\n    {\r\n      find: \"^\",\r\n      replace: \"ঁ\",\r\n    },\r\n    {\r\n      find: \",,\",\r\n      replace: \"্‌\",\r\n    },\r\n    {\r\n      find: \",\",\r\n      replace: \",\",\r\n    },\r\n    {\r\n      find: \"$\",\r\n      replace: \"৳\",\r\n    },\r\n    {\r\n      find: \"`\",\r\n      replace: \"\",\r\n    },\r\n  ],\r\n  vowel: \"aeiou\",\r\n  consonant: \"bcdfghjklmnpqrstvwxyz\",\r\n  casesensitive: \"oiudgjnrstyz\",\r\n};\r\n","export const phoneticPreview = (value, event) => {\r\n  const targetElement = event.target || document.activeElement;\r\n\r\n  // Get cursor's current position\r\n  const cursorPosition = targetElement.selectionStart;\r\n\r\n  // Extract the word where the cursor is currently located\r\n  const valueUpToCursor = value.substring(0, cursorPosition);\r\n  const words = valueUpToCursor.split(/\\s+/);\r\n  const currentWord = words[words.length - 1];\r\n\r\n  if (currentWord.length !== 0) {\r\n    // Create a tooltip element to show the preview\r\n    let tooltip = document.getElementById(\"banglish-tooltip\");\r\n    if (!tooltip) {\r\n      tooltip = document.createElement(\"div\");\r\n      tooltip.id = \"banglish-tooltip\";\r\n      tooltip.style.position = \"fixed\";\r\n      tooltip.style.backgroundColor = \"rgb(255 176 0)\";\r\n      tooltip.style.border = \"1px solid #ccc\";\r\n      tooltip.style.padding = \"3px\";\r\n      tooltip.style.display = \"none\";\r\n      tooltip.style.zIndex = \"2147483647\";\r\n      tooltip.style.color = \"black\";\r\n      document.body.appendChild(tooltip);\r\n    }\r\n\r\n    // Position the tooltip near the input/textarea and show the translated text\r\n    const rect = targetElement.getBoundingClientRect();\r\n    tooltip.style.left = `${rect.left}px`;\r\n    tooltip.style.top = `0px`;\r\n    tooltip.textContent = currentWord;\r\n    tooltip.style.display = \"block\";\r\n  }\r\n};\r\n","import { data } from \"./data\";\r\n\r\nclass Phonetic {\r\n  constructor() {\r\n    this.data = data;\r\n  }\r\n  parse(input) {\r\n    var fixed = this.fixString(input);\r\n    var output = \"\";\r\n    for (var cur = 0; cur < fixed.length; ++cur) {\r\n      var start = cur,\r\n        end = cur + 1,\r\n        prev = start - 1;\r\n      var matched = false;\r\n\r\n      for (var i = 0; i < this.data.patterns.length; ++i) {\r\n        var pattern = this.data.patterns[i];\r\n        end = cur + pattern.find.length;\r\n\r\n        if (\r\n          end <= fixed.length &&\r\n          fixed.substring(start, end) === pattern.find\r\n        ) {\r\n          prev = start - 1;\r\n          if (typeof pattern.rules !== \"undefined\") {\r\n            for (var j = 0; j < pattern.rules.length; ++j) {\r\n              var rule = pattern.rules[j];\r\n              var replace = true;\r\n\r\n              var chk = 0;\r\n              for (var k = 0; k < rule.matches.length; ++k) {\r\n                var match = rule.matches[k];\r\n\r\n                if (match.type === \"suffix\") {\r\n                  chk = end;\r\n                }\r\n                // Prefix\r\n                else {\r\n                  chk = prev;\r\n                }\r\n\r\n                // Handle Negative\r\n                if (typeof match.negative === \"undefined\") {\r\n                  match.negative = false;\r\n                  if (match.scope.charAt(0) === \"!\") {\r\n                    match.negative = true;\r\n                    match.scope = match.scope.substring(1);\r\n                  }\r\n                }\r\n\r\n                // Handle empty value\r\n                if (typeof match.value === \"undefined\") match.value = \"\";\r\n\r\n                // Beginning\r\n                if (match.scope === \"punctuation\") {\r\n                  if (\r\n                    !(\r\n                      (chk < 0 && match.type === \"prefix\") ||\r\n                      (chk >= fixed.length && match.type === \"suffix\") ||\r\n                      this.isPunctuation(fixed.charAt(chk))\r\n                    ) ^ match.negative\r\n                  ) {\r\n                    replace = false;\r\n                    break;\r\n                  }\r\n                }\r\n                // Vowel\r\n                else if (match.scope === \"vowel\") {\r\n                  if (\r\n                    !(\r\n                      ((chk >= 0 && match.type === \"prefix\") ||\r\n                        (chk < fixed.length && match.type === \"suffix\")) &&\r\n                      this.isVowel(fixed.charAt(chk))\r\n                    ) ^ match.negative\r\n                  ) {\r\n                    replace = false;\r\n                    break;\r\n                  }\r\n                }\r\n                // Consonant\r\n                else if (match.scope === \"consonant\") {\r\n                  if (\r\n                    !(\r\n                      ((chk >= 0 && match.type === \"prefix\") ||\r\n                        (chk < fixed.length && match.type === \"suffix\")) &&\r\n                      this.isConsonant(fixed.charAt(chk))\r\n                    ) ^ match.negative\r\n                  ) {\r\n                    replace = false;\r\n                    break;\r\n                  }\r\n                }\r\n                // Exact\r\n                else if (match.scope === \"exact\") {\r\n                  var s, e;\r\n                  if (match.type === \"suffix\") {\r\n                    s = end;\r\n                    e = end + match.value.length;\r\n                  }\r\n                  // Prefix\r\n                  else {\r\n                    s = start - match.value.length;\r\n                    e = start;\r\n                  }\r\n                  if (!this.isExact(match.value, fixed, s, e, match.negative)) {\r\n                    replace = false;\r\n                    break;\r\n                  }\r\n                }\r\n              }\r\n\r\n              if (replace) {\r\n                output += rule.replace;\r\n                cur = end - 1;\r\n                matched = true;\r\n                break;\r\n              }\r\n            }\r\n          }\r\n          if (matched === true) break;\r\n\r\n          // Default\r\n          output += pattern.replace;\r\n          cur = end - 1;\r\n          matched = true;\r\n          break;\r\n        }\r\n      }\r\n\r\n      if (!matched) {\r\n        output += fixed.charAt(cur);\r\n      }\r\n    }\r\n    return output;\r\n  }\r\n  fixString(input) {\r\n    var fixed = \"\";\r\n    for (var i = 0; i < input.length; ++i) {\r\n      var cChar = input.charAt(i);\r\n      if (this.isCaseSensitive(cChar)) {\r\n        fixed += cChar;\r\n      } else {\r\n        fixed += cChar.toLowerCase();\r\n      }\r\n    }\r\n    return fixed;\r\n  }\r\n  isVowel(c) {\r\n    return this.data.vowel.indexOf(c.toLowerCase()) >= 0;\r\n  }\r\n  isConsonant(c) {\r\n    return this.data.consonant.indexOf(c.toLowerCase()) >= 0;\r\n  }\r\n  isPunctuation(c) {\r\n    return !(this.isVowel(c) || this.isConsonant(c));\r\n  }\r\n  isExact(needle, heystack, start, end, not) {\r\n    return (\r\n      (start >= 0 &&\r\n        end < heystack.length &&\r\n        heystack.substring(start, end) === needle) ^ not\r\n    );\r\n  }\r\n  isCaseSensitive(c) {\r\n    return this.data.casesensitive.indexOf(c.toLowerCase()) >= 0;\r\n  }\r\n}\r\n\r\nexport { Phonetic };\r\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import { Phonetic } from \"./Phonetic/phonetic\";\r\nimport { phoneticPreview } from \"./Phonetic/phonetc-preview\";\r\n\r\nconst phonetic = new Phonetic();"],"names":[],"sourceRoot":""}